<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 整合mybatis -->
	<!-- 1:配置数据库的相关参数 properties的属性：${url} -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	
	<!-- 数据库连接池 -->
	<!-- seckill系统定制 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 配置连接池属性 -->
		<property name="driverClass" value="${driver}"></property>
		<property name="jdbcUrl" value="${url}"></property>
		<property name="user" value="${user}"></property>
		<property name="password" value="${password}"></property>
		<!-- c3p0连接池的私有属性 -->
		<property name="maxPoolSize" value="30"></property>
		<property name="minPoolSize" value="10"></property>
		<property name="autoCommitOnClose" value="false"></property>
		<property name="checkoutTimeout" value="1000"></property>
		<!-- 当获取连接失败重复次数 -->
		<property name="acquireRetryAttempts" value="2"></property>
	</bean>
		
		<!-- 配置SqlSessionFactroy对象 -->
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="dataSource"></property>
			<property name="configLocation" value="classpath:mybatis-config.xml"></property>
			<property name="typeAliasesPackage" value="org.seckill.entity"></property>
			<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
		</bean>
		
		<!-- 配置扫描dao接口包，动态实现dao接口，注入spring容器中 -->
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<!--注入sqlSessionFactroy-->
			<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
			<property name="basePackage" value="org.seckill.dao"></property>		
		</bean>
		
</beans>